<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wondersgroup.cloud.paas.storage.mapper.PriceMapper">
    <resultMap id="BaseResultMap" type="com.wondersgroup.cloud.paas.storage.model.Price">
        <constructor>
            <idArg column="price_id" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="code" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="subCode" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="value" javaType="java.math.BigDecimal" jdbcType="DECIMAL"/>
            <arg column="scope_begin" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="scope_end" javaType="java.lang.Long" jdbcType="BIGINT"/>
            <arg column="prefixLabel" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="suffixLabel" javaType="java.lang.String" jdbcType="VARCHAR"/>
            <arg column="desc" javaType="java.lang.String" jdbcType="VARCHAR"/>
        </constructor>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List">
    price_id, code, subCode, `value`, scope_begin, scope_end, prefixLabel, suffixLabel, 
    `desc`
  </sql>
    <select id="selectByExample" parameterType="com.wondersgroup.cloud.paas.storage.model.PriceExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from price
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from price
        where price_id = #{priceId,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from price
    where price_id = #{priceId,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.wondersgroup.cloud.paas.storage.model.PriceExample">
        delete from price
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.wondersgroup.cloud.paas.storage.model.Price">
    insert into price (price_id, code, subCode, 
      `value`, scope_begin, scope_end, 
      prefixLabel, suffixLabel, `desc`
      )
    values (#{priceId,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR}, #{subcode,jdbcType=VARCHAR}, 
      #{value,jdbcType=DECIMAL}, #{scopeBegin,jdbcType=BIGINT}, #{scopeEnd,jdbcType=BIGINT}, 
      #{prefixlabel,jdbcType=VARCHAR}, #{suffixlabel,jdbcType=VARCHAR}, #{desc,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.wondersgroup.cloud.paas.storage.model.Price">
        insert into price
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="priceId != null">
                price_id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="subcode != null">
                subCode,
            </if>
            <if test="value != null">
                `value`,
            </if>
            <if test="scopeBegin != null">
                scope_begin,
            </if>
            <if test="scopeEnd != null">
                scope_end,
            </if>
            <if test="prefixlabel != null">
                prefixLabel,
            </if>
            <if test="suffixlabel != null">
                suffixLabel,
            </if>
            <if test="desc != null">
                `desc`,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="priceId != null">
                #{priceId,jdbcType=VARCHAR},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="subcode != null">
                #{subcode,jdbcType=VARCHAR},
            </if>
            <if test="value != null">
                #{value,jdbcType=DECIMAL},
            </if>
            <if test="scopeBegin != null">
                #{scopeBegin,jdbcType=BIGINT},
            </if>
            <if test="scopeEnd != null">
                #{scopeEnd,jdbcType=BIGINT},
            </if>
            <if test="prefixlabel != null">
                #{prefixlabel,jdbcType=VARCHAR},
            </if>
            <if test="suffixlabel != null">
                #{suffixlabel,jdbcType=VARCHAR},
            </if>
            <if test="desc != null">
                #{desc,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.wondersgroup.cloud.paas.storage.model.PriceExample"
            resultType="java.lang.Long">
        select count(*) from price
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update price
        <set>
            <if test="record.priceId != null">
                price_id = #{record.priceId,jdbcType=VARCHAR},
            </if>
            <if test="record.code != null">
                code = #{record.code,jdbcType=VARCHAR},
            </if>
            <if test="record.subcode != null">
                subCode = #{record.subcode,jdbcType=VARCHAR},
            </if>
            <if test="record.value != null">
                `value` = #{record.value,jdbcType=DECIMAL},
            </if>
            <if test="record.scopeBegin != null">
                scope_begin = #{record.scopeBegin,jdbcType=BIGINT},
            </if>
            <if test="record.scopeEnd != null">
                scope_end = #{record.scopeEnd,jdbcType=BIGINT},
            </if>
            <if test="record.prefixlabel != null">
                prefixLabel = #{record.prefixlabel,jdbcType=VARCHAR},
            </if>
            <if test="record.suffixlabel != null">
                suffixLabel = #{record.suffixlabel,jdbcType=VARCHAR},
            </if>
            <if test="record.desc != null">
                `desc` = #{record.desc,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update price
        set price_id = #{record.priceId,jdbcType=VARCHAR},
        code = #{record.code,jdbcType=VARCHAR},
        subCode = #{record.subcode,jdbcType=VARCHAR},
        `value` = #{record.value,jdbcType=DECIMAL},
        scope_begin = #{record.scopeBegin,jdbcType=BIGINT},
        scope_end = #{record.scopeEnd,jdbcType=BIGINT},
        prefixLabel = #{record.prefixlabel,jdbcType=VARCHAR},
        suffixLabel = #{record.suffixlabel,jdbcType=VARCHAR},
        `desc` = #{record.desc,jdbcType=VARCHAR}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.wondersgroup.cloud.paas.storage.model.Price">
        update price
        <set>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="subcode != null">
                subCode = #{subcode,jdbcType=VARCHAR},
            </if>
            <if test="value != null">
                `value` = #{value,jdbcType=DECIMAL},
            </if>
            <if test="scopeBegin != null">
                scope_begin = #{scopeBegin,jdbcType=BIGINT},
            </if>
            <if test="scopeEnd != null">
                scope_end = #{scopeEnd,jdbcType=BIGINT},
            </if>
            <if test="prefixlabel != null">
                prefixLabel = #{prefixlabel,jdbcType=VARCHAR},
            </if>
            <if test="suffixlabel != null">
                suffixLabel = #{suffixlabel,jdbcType=VARCHAR},
            </if>
            <if test="desc != null">
                `desc` = #{desc,jdbcType=VARCHAR},
            </if>
        </set>
        where price_id = #{priceId,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.wondersgroup.cloud.paas.storage.model.Price">
    update price
    set code = #{code,jdbcType=VARCHAR},
      subCode = #{subcode,jdbcType=VARCHAR},
      `value` = #{value,jdbcType=DECIMAL},
      scope_begin = #{scopeBegin,jdbcType=BIGINT},
      scope_end = #{scopeEnd,jdbcType=BIGINT},
      prefixLabel = #{prefixlabel,jdbcType=VARCHAR},
      suffixLabel = #{suffixlabel,jdbcType=VARCHAR},
      `desc` = #{desc,jdbcType=VARCHAR}
    where price_id = #{priceId,jdbcType=VARCHAR}
  </update>
    <select id="selectByExampleWithRowbounds" parameterType="com.wondersgroup.cloud.paas.storage.model.PriceExample"
            resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from price
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
</mapper>